@<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Toot Express - Modern E-commerce Solution</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.6.5/flowbite.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.6.5/flowbite.min.js" defer></script>
    <style>
        :root {
            --primary-color: #5D5CDE;
            --secondary-color: #4f46e5;
            --accent-color: #818cf8;
            --text-color: #374151;
            --bg-color: #ffffff;
            --card-bg: #f9fafb;
        }

        @media (prefers-color-scheme: dark) {
            :root {
                --primary-color: #5D5CDE;
                --secondary-color: #6366f1;
                --accent-color: #818cf8;
                --text-color: #f3f4f6;
                --bg-color: #181818;
                --card-bg: #1f2937;
            }
        }

        body {
            background-color: var(--bg-color);
            color: var(--text-color);
            font-family: 'Inter', sans-serif;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background-color: var(--primary-color);
            color: white;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            background-color: var(--secondary-color);
            transform: translateY(-2px);
        }

        .card {
            background-color: var(--card-bg);
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }

        .product-card {
            border-radius: 8px;
            overflow: hidden;
        }

        .product-card img {
            transition: all 0.5s ease;
            object-fit: cover;
        }

        .product-card:hover img {
            transform: scale(1.05);
        }

        /* Carousel */
        .carousel {
            position: relative;
            overflow: hidden;
        }

        .carousel-container {
            display: flex;
            transition: transform 0.5s ease;
        }

        .category-carousel .carousel-container {
            gap: 1rem;
            padding: 0.5rem;
        }

        .carousel-item {
            flex: 0 0 auto;
        }

        .carousel-nav {
            display: flex;
            justify-content: center;
            margin-top: 1rem;
        }

        .carousel-dot {
            height: 10px;
            width: 10px;
            border-radius: 50%;
            background-color: #ddd;
            margin: 0 5px;
            cursor: pointer;
        }

        .carousel-dot.active {
            background-color: var(--primary-color);
        }

        /* Admin panel */
        .admin-menu a {
            transition: all 0.3s ease;
        }

        .admin-menu a:hover, .admin-menu a.active {
            background-color: var(--primary-color);
            color: white;
        }

        /* Loading spinner */
        .loading-spinner {
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-left-color: var(--primary-color);
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .banner-text {
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        }

        /* Cart button animation */
        .cart-button {
            position: relative;
        }

        .cart-button .cart-count {
            position: absolute;
            top: -8px;
            right: -8px;
            background-color: #ef4444;
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            font-size: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .cart-button.animate .cart-count {
            animation: pulse 0.5s ease-out;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.3); }
            100% { transform: scale(1); }
        }

        /* Toast notification */
        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            padding: 1rem;
            background-color: var(--primary-color);
            color: white;
            border-radius: 4px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transform: translateY(100px);
            opacity: 0;
            transition: all 0.3s ease;
            z-index: 50;
        }

        .toast.show {
            transform: translateY(0);
            opacity: 1;
        }
    </style>
</head>
<body>
    <!-- Toast Notification -->
    <div id="toast" class="toast">
        <div class="flex items-center">
            <i class="fas fa-check-circle mr-2"></i>
            <span id="toast-message">Item added to cart!</span>
        </div>
    </div>

    <!-- Main App Container -->
    <div id="app" class="min-h-screen flex flex-col">
        <!-- Header -->
        <header class="bg-gradient-to-r from-indigo-500 to-purple-600 text-white shadow-md">
            <div class="container mx-auto px-4 py-3">
                <div class="flex flex-wrap items-center justify-between">
                    <!-- Logo -->
                    <a href="#" class="flex items-center text-2xl font-bold" id="logo">
                        <i class="fas fa-store mr-2"></i>
                        <span>Toot Express</span>
                    </a>

                    <!-- Mobile Menu Button -->
                    <button id="mobile-menu-button" class="md:hidden p-2 focus:outline-none">
                        <i class="fas fa-bars text-xl"></i>
                    </button>

                    <!-- Navigation -->
                    <nav id="navigation" class="hidden md:flex items-center space-x-6 text-sm">
                        <a href="#" class="py-2 hover:text-indigo-200 transition duration-300" data-page="home">Home</a>
                        <a href="#" class="py-2 hover:text-indigo-200 transition duration-300" data-page="shop">Shop</a>
                        <a href="#" class="py-2 hover:text-indigo-200 transition duration-300" data-page="admin">Admin Panel</a>
                        <div class="relative">
                            <button id="cart-button" class="cart-button p-2 hover:text-indigo-200 transition duration-300">
                                <i class="fas fa-shopping-cart text-xl"></i>
                                <span id="cart-count" class="cart-count">0</span>
                            </button>
                        </div>
                    </nav>
                </div>

                <!-- Mobile Navigation Menu -->
                <div id="mobile-menu" class="md:hidden hidden pt-4 pb-2">
                    <a href="#" class="block py-2 hover:text-indigo-200 transition duration-300" data-page="home">Home</a>
                    <a href="#" class="block py-2 hover:text-indigo-200 transition duration-300" data-page="shop">Shop</a>
                    <a href="#" class="block py-2 hover:text-indigo-200 transition duration-300" data-page="admin">Admin Panel</a>
                </div>
            </div>
        </header>

        <!-- Main Content -->
        <main class="flex-grow">
            <!-- Pages Container -->
            <div id="pages">
                <!-- Home Page -->
                <div id="home-page" class="page active">
                    <!-- Hero Banner -->
                    <div class="relative bg-gray-900 h-96 md:h-[500px] overflow-hidden">
                        <div class="banner-carousel h-full w-full">
                            <div class="banner-slide absolute inset-0 opacity-0 transition-opacity duration-1000" style="background: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url('https://picsum.photos/id/1025/1600/900') center/cover no-repeat;">
                                <div class="container mx-auto px-4 h-full flex items-center">
                                    <div class="max-w-xl">
                                        <h1 class="text-4xl md:text-5xl font-bold text-white banner-text mb-4">Summer Collection 2023</h1>
                                        <p class="text-lg text-gray-200 mb-6">Discover our new arrivals for the summer season with up to 40% off.</p>
                                        <button class="btn-primary px-6 py-3 rounded-md font-medium">Shop Now</button>
                                    </div>
                                </div>
                            </div>
                            <div class="banner-slide absolute inset-0 opacity-0 transition-opacity duration-1000" style="background: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url('https://picsum.photos/id/96/1600/900') center/cover no-repeat;">
                                <div class="container mx-auto px-4 h-full flex items-center">
                                    <div class="max-w-xl">
                                        <h1 class="text-4xl md:text-5xl font-bold text-white banner-text mb-4">New Electronics</h1>
                                        <p class="text-lg text-gray-200 mb-6">Latest tech gadgets with free shipping on all orders over $50.</p>
                                        <button class="btn-primary px-6 py-3 rounded-md font-medium">Explore</button>
                                    </div>
                                </div>
                            </div>
                            <div class="banner-slide absolute inset-0 opacity-0 transition-opacity duration-1000" style="background: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url('https://picsum.photos/id/26/1600/900') center/cover no-repeat;">
                                <div class="container mx-auto px-4 h-full flex items-center">
                                    <div class="max-w-xl">
                                        <h1 class="text-4xl md:text-5xl font-bold text-white banner-text mb-4">Home Decor Sale</h1>
                                        <p class="text-lg text-gray-200 mb-6">Transform your space with our exclusive home collection.</p>
                                        <button class="btn-primary px-6 py-3 rounded-md font-medium">Shop Collection</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="absolute bottom-4 left-0 right-0 flex justify-center space-x-2">
                            <button class="w-3 h-3 rounded-full bg-white opacity-50 focus:outline-none banner-dot active"></button>
                            <button class="w-3 h-3 rounded-full bg-white opacity-50 focus:outline-none banner-dot"></button>
                            <button class="w-3 h-3 rounded-full bg-white opacity-50 focus:outline-none banner-dot"></button>
                        </div>
                    </div>

                    <!-- Categories Section -->
                    <section class="py-12 bg-gray-50 dark:bg-gray-800">
                        <div class="container mx-auto px-4">
                            <h2 class="text-3xl font-bold mb-8 text-center">Shop by Category</h2>
                            <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 md:gap-6">
                                <!-- Categories will be populated by JavaScript -->
                            </div>
                        </div>
                    </section>

                    <!-- Featured Products for each Category -->
                    <section id="category-products" class="py-12">
                        <!-- Category product sliders will be added here -->
                    </section>

                    <!-- Services -->
                    <section class="py-12 bg-gray-100 dark:bg-gray-800">
                        <div class="container mx-auto px-4">
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
                                <div class="p-6">
                                    <i class="fas fa-truck text-4xl mb-4 text-indigo-600"></i>
                                    <h3 class="text-xl font-bold mb-2">Free Shipping</h3>
                                    <p class="text-gray-600 dark:text-gray-300">On all orders over $50</p>
                                </div>
                                <div class="p-6">
                                    <i class="fas fa-undo text-4xl mb-4 text-indigo-600"></i>
                                    <h3 class="text-xl font-bold mb-2">Easy Returns</h3>
                                    <p class="text-gray-600 dark:text-gray-300">30 days return policy</p>
                                </div>
                                <div class="p-6">
                                    <i class="fas fa-headset text-4xl mb-4 text-indigo-600"></i>
                                    <h3 class="text-xl font-bold mb-2">24/7 Support</h3>
                                    <p class="text-gray-600 dark:text-gray-300">Customer support all day</p>
                                </div>
                            </div>
                        </div>
                    </section>
                </div>

                <!-- Shop Page -->
                <div id="shop-page" class="page hidden">
                    <div class="container mx-auto px-4 py-8">
                        <h1 class="text-3xl font-bold mb-8">All Products</h1>
                        
                        <!-- Filters and Search -->
                        <div class="mb-8 flex flex-wrap gap-4">
                            <div class="w-full md:w-auto">
                                <select id="category-filter" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white">
                                    <option value="">All Categories</option>
                                    <!-- Categories will be populated here -->
                                </select>
                            </div>
                            <div class="w-full md:w-auto">
                                <input type="text" id="search-products" placeholder="Search products..." class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white">
                            </div>
                            <div class="w-full md:w-auto">
                                <select id="sort-products" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white">
                                    <option value="default">Sort by: Default</option>
                                    <option value="price-asc">Price: Low to High</option>
                                    <option value="price-desc">Price: High to Low</option>
                                    <option value="name-asc">Name: A to Z</option>
                                    <option value="name-desc">Name: Z to A</option>
                                </select>
                            </div>
                        </div>
                        
                        <!-- Products Grid -->
                        <div id="products-grid" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
                            <!-- Products will be populated here -->
                        </div>
                    </div>
                </div>

                <!-- Admin Panel Page -->
                <div id="admin-page" class="page hidden">
                    <div class="container mx-auto px-4 py-8">
                        <h1 class="text-3xl font-bold mb-8">Admin Panel</h1>
                        
                        <div class="grid grid-cols-1 lg:grid-cols-5 gap-8">
                            <!-- Admin Sidebar -->
                            <div class="lg:col-span-1">
                                <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-4">
                                    <div class="admin-menu flex flex-col space-y-2">
                                        <a href="#" class="px-4 py-2 rounded-md active" data-admin-tab="dashboard">Dashboard</a>
                                        <a href="#" class="px-4 py-2 rounded-md" data-admin-tab="products">Products</a>
                                        <a href="#" class="px-4 py-2 rounded-md" data-admin-tab="categories">Categories</a>
                                        <a href="#" class="px-4 py-2 rounded-md" data-admin-tab="orders">Orders</a>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Admin Content -->
                            <div class="lg:col-span-4">
                                <!-- Dashboard Tab -->
                                <div id="dashboard-tab" class="admin-tab active">
                                    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                                        <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
                                            <div class="flex items-center">
                                                <div class="p-3 rounded-full bg-indigo-100 dark:bg-indigo-900 mr-4">
                                                    <i class="fas fa-shopping-bag text-indigo-500 dark:text-indigo-300"></i>
                                                </div>
                                                <div>
                                                    <p class="text-gray-500 dark:text-gray-400 text-sm">Total Products</p>
                                                    <p class="text-2xl font-bold" id="total-products">0</p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
                                            <div class="flex items-center">
                                                <div class="p-3 rounded-full bg-green-100 dark:bg-green-900 mr-4">
                                                    <i class="fas fa-tags text-green-500 dark:text-green-300"></i>
                                                </div>
                                                <div>
                                                    <p class="text-gray-500 dark:text-gray-400 text-sm">Total Categories</p>
                                                    <p class="text-2xl font-bold" id="total-categories">0</p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
                                            <div class="flex items-center">
                                                <div class="p-3 rounded-full bg-blue-100 dark:bg-blue-900 mr-4">
                                                    <i class="fas fa-file-invoice text-blue-500 dark:text-blue-300"></i>
                                                </div>
                                                <div>
                                                    <p class="text-gray-500 dark:text-gray-400 text-sm">Total Orders</p>
                                                    <p class="text-2xl font-bold" id="total-orders">0</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6 mb-8">
                                        <h3 class="text-lg font-bold mb-4">Recent Orders</h3>
                                        <div class="overflow-x-auto">
                                            <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                                                <thead>
                                                    <tr>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Order ID</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Customer</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Date</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Amount</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Status</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="recent-orders" class="divide-y divide-gray-200 dark:divide-gray-700">
                                                    <!-- Orders will be populated here -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
                                        <h3 class="text-lg font-bold mb-4">Quick Actions</h3>
                                        <div class="flex flex-wrap gap-4">
                                            <button class="btn-primary px-4 py-2 rounded-md" data-admin-tab="products" data-action="add-product">
                                                <i class="fas fa-plus mr-2"></i> Add Product
                                            </button>
                                            <button class="btn-primary px-4 py-2 rounded-md" data-admin-tab="categories" data-action="add-category">
                                                <i class="fas fa-plus mr-2"></i> Add Category
                                            </button>
                                        </div>
                                    </div>
                                </div>

                                <!-- Products Tab -->
                                <div id="products-tab" class="admin-tab hidden">
                                    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6 mb-8">
                                        <div class="flex justify-between items-center mb-6">
                                            <h3 class="text-lg font-bold">Manage Products</h3>
                                            <button id="add-product-btn" class="btn-primary px-4 py-2 rounded-md">
                                                <i class="fas fa-plus mr-2"></i> Add Product
                                            </button>
                                        </div>
                                        
                                        <div class="overflow-x-auto">
                                            <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                                                <thead>
                                                    <tr>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">ID</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Image</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Name</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Category</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Price</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Stock</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="products-table" class="divide-y divide-gray-200 dark:divide-gray-700">
                                                    <!-- Products will be populated here -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <!-- Add/Edit Product Form -->
                                    <div id="product-form" class="bg-white dark:bg-gray-800 shadow rounded-lg p-6 hidden">
                                        <h3 id="product-form-title" class="text-lg font-bold mb-6">Add New Product</h3>
                                        <form id="add-edit-product-form" class="space-y-6">
                                            <input type="hidden" id="product-id">
                                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                                <div>
                                                    <label for="product-name" class="block mb-2 text-sm font-medium">Product Name</label>
                                                    <input type="text" id="product-name" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required>
                                                </div>
                                                <div>
                                                    <label for="product-category" class="block mb-2 text-sm font-medium">Category</label>
                                                    <select id="product-category" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required>
                                                        <!-- Categories will be populated here -->
                                                    </select>
                                                </div>
                                                <div>
                                                    <label for="product-price" class="block mb-2 text-sm font-medium">Price ($)</label>
                                                    <input type="number" id="product-price" min="0" step="0.01" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required>
                                                </div>
                                                <div>
                                                    <label for="product-stock" class="block mb-2 text-sm font-medium">Stock</label>
                                                    <input type="number" id="product-stock" min="0" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required>
                                                </div>
                                            </div>
                                            <div>
                                                <label for="product-image" class="block mb-2 text-sm font-medium">Image Pattern (1-100)</label>
                                                <input type="number" id="product-image" min="1" max="100" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required>
                                                <p class="text-sm text-gray-500 mt-1">Enter a number between 1 and 100 to generate an image</p>
                                            </div>
                                            <div>
                                                <label for="product-description" class="block mb-2 text-sm font-medium">Description</label>
                                                <textarea id="product-description" rows="4" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required></textarea>
                                            </div>
                                            <div class="flex justify-end space-x-4">
                                                <button type="button" id="cancel-product" class="bg-gray-300 hover:bg-gray-400 dark:bg-gray-600 dark:hover:bg-gray-700 px-4 py-2 rounded-md text-gray-800 dark:text-white">Cancel</button>
                                                <button type="submit" class="btn-primary px-4 py-2 rounded-md">Save Product</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>

                                <!-- Categories Tab -->
                                <div id="categories-tab" class="admin-tab hidden">
                                    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6 mb-8">
                                        <div class="flex justify-between items-center mb-6">
                                            <h3 class="text-lg font-bold">Manage Categories</h3>
                                            <button id="add-category-btn" class="btn-primary px-4 py-2 rounded-md">
                                                <i class="fas fa-plus mr-2"></i> Add Category
                                            </button>
                                        </div>
                                        
                                        <div class="overflow-x-auto">
                                            <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                                                <thead>
                                                    <tr>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">ID</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Icon</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Name</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Products</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="categories-table" class="divide-y divide-gray-200 dark:divide-gray-700">
                                                    <!-- Categories will be populated here -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <!-- Add/Edit Category Form -->
                                    <div id="category-form" class="bg-white dark:bg-gray-800 shadow rounded-lg p-6 hidden">
                                        <h3 id="category-form-title" class="text-lg font-bold mb-6">Add New Category</h3>
                                        <form id="add-edit-category-form" class="space-y-6">
                                            <input type="hidden" id="category-id">
                                            <div>
                                                <label for="category-name" class="block mb-2 text-sm font-medium">Category Name</label>
                                                <input type="text" id="category-name" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required>
                                            </div>
                                            <div>
                                                <label for="category-icon" class="block mb-2 text-sm font-medium">Icon</label>
                                                <select id="category-icon" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required>
                                                    <option value="fa-tshirt">Clothing</option>
                                                    <option value="fa-laptop">Electronics</option>
                                                    <option value="fa-couch">Furniture</option>
                                                    <option value="fa-utensils">Kitchen</option>
                                                    <option value="fa-shoe-prints">Footwear</option>
                                                    <option value="fa-gem">Jewelry</option>
                                                    <option value="fa-book">Books</option>
                                                    <option value="fa-basketball-ball">Sports</option>
                                                    <option value="fa-baby">Kids</option>
                                                    <option value="fa-paint-brush">Arts</option>
                                                </select>
                                            </div>
                                            <div class="flex justify-end space-x-4">
                                                <button type="button" id="cancel-category" class="bg-gray-300 hover:bg-gray-400 dark:bg-gray-600 dark:hover:bg-gray-700 px-4 py-2 rounded-md text-gray-800 dark:text-white">Cancel</button>
                                                <button type="submit" class="btn-primary px-4 py-2 rounded-md">Save Category</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>

                                <!-- Orders Tab -->
                                <div id="orders-tab" class="admin-tab hidden">
                                    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
                                        <h3 class="text-lg font-bold mb-6">Order Management</h3>
                                        
                                        <div class="overflow-x-auto">
                                            <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                                                <thead>
                                                    <tr>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Order ID</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Customer</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Date</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Items</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Total</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Status</th>
                                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="orders-table" class="divide-y divide-gray-200 dark:divide-gray-700">
                                                    <!-- Orders will be populated here -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>

        <!-- Shopping Cart Sidebar -->
        <div id="cart-sidebar" class="fixed top-0 right-0 w-full md:w-96 h-full bg-white dark:bg-gray-800 shadow-lg transform translate-x-full transition-transform duration-300 ease-in-out z-40">
            <div class="flex flex-col h-full">
                <div class="p-4 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center">
                    <h2 class="text-xl font-bold">Your Cart</h2>
                    <button id="close-cart" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
                <div id="cart-items" class="flex-grow overflow-y-auto p-4">
                    <!-- Cart items will be populated here -->
                    <div id="empty-cart" class="text-center py-8">
                        <i class="fas fa-shopping-cart text-4xl text-gray-300 dark:text-gray-600 mb-4"></i>
                        <p class="text-gray-500 dark:text-gray-400">Your cart is empty</p>
                        <button id="continue-shopping" class="mt-4 btn-primary px-4 py-2 rounded-md">Continue Shopping</button>
                    </div>
                </div>
                <div id="cart-summary" class="p-4 border-t border-gray-200 dark:border-gray-700 hidden">
                    <div class="flex justify-between mb-2">
                        <span>Subtotal:</span>
                        <span id="cart-subtotal">$0.00</span>
                    </div>
                    <div class="flex justify-between mb-4">
                        <span>Shipping:</span>
                        <span id="cart-shipping">$0.00</span>
                    </div>
                    <div class="flex justify-between text-lg font-bold mb-4">
                        <span>Total:</span>
                        <span id="cart-total">$0.00</span>
                    </div>
                    <button id="checkout-btn" class="w-full btn-primary py-3 rounded-md font-medium">
                        Proceed to Checkout
                    </button>
                </div>
            </div>
        </div>

        <!-- Checkout Modal -->
        <div id="checkout-modal" class="fixed inset-0 z-50 hidden">
            <div class="absolute inset-0 bg-black bg-opacity-50"></div>
            <div class="relative w-full max-w-2xl mx-auto mt-20 bg-white dark:bg-gray-800 rounded-lg shadow-lg">
                <div class="p-6">
                    <div class="flex justify-between items-center mb-6">
                        <h2 class="text-2xl font-bold">Checkout</h2>
                        <button id="close-checkout" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                            <i class="fas fa-times text-xl"></i>
                        </button>
                    </div>
                    <form id="checkout-form" class="space-y-6">
                        <div>
                            <h3 class="text-lg font-medium mb-4">Shipping Information</h3>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div>
                                    <label for="first-name" class="block mb-2 text-sm font-medium">First Name</label>
                                    <input type="text" id="first-name" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required>
                                </div>
                                <div>
                                    <label for="last-name" class="block mb-2 text-sm font-medium">Last Name</label>
                                    <input type="text" id="last-name" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required>
                                </div>
                                <div>
                                    <label for="email" class="block mb-2 text-sm font-medium">Email</label>
                                    <input type="email" id="email" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required>
                                </div>
                                <div>
                                    <label for="phone" class="block mb-2 text-sm font-medium">Phone</label>
                                    <input type="tel" id="phone" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required>
                                </div>
                                <div class="md:col-span-2">
                                    <label for="address" class="block mb-2 text-sm font-medium">Address</label>
                                    <input type="text" id="address" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required>
                                </div>
                                <div>
                                    <label for="city" class="block mb-2 text-sm font-medium">City</label>
                                    <input type="text" id="city" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required>
                                </div>
                                <div>
                                    <label for="postal-code" class="block mb-2 text-sm font-medium">Postal Code</label>
                                    <input type="text" id="postal-code" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required>
                                </div>
                            </div>
                        </div>
                        <div>
                            <h3 class="text-lg font-medium mb-4">Payment Information</h3>
                            <div class="grid grid-cols-1 gap-4">
                                <div>
                                    <label for="card-name" class="block mb-2 text-sm font-medium">Name on Card</label>
                                    <input type="text" id="card-name" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" required>
                                </div>
                                <div>
                                    <label for="card-number" class="block mb-2 text-sm font-medium">Card Number</label>
                                    <input type="text" id="card-number" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" placeholder="XXXX XXXX XXXX XXXX" required>
                                </div>
                                <div class="grid grid-cols-2 gap-4">
                                    <div>
                                        <label for="expiry-date" class="block mb-2 text-sm font-medium">Expiry Date</label>
                                        <input type="text" id="expiry-date" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" placeholder="MM/YY" required>
                                    </div>
                                    <div>
                                        <label for="cvv" class="block mb-2 text-sm font-medium">CVV</label>
                                        <input type="text" id="cvv" class="bg-gray-50 border border-gray-300 text-gray-900 text-base rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" placeholder="XXX" required>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="border-t pt-4 dark:border-gray-700">
                            <div class="flex justify-between mb-2">
                                <span>Subtotal:</span>
                                <span id="checkout-subtotal">$0.00</span>
                            </div>
                            <div class="flex justify-between mb-2">
                                <span>Shipping:</span>
                                <span id="checkout-shipping">$0.00</span>
                            </div>
                            <div class="flex justify-between text-lg font-bold mb-4">
                                <span>Total:</span>
                                <span id="checkout-total">$0.00</span>
                            </div>
                        </div>
                        <div class="flex justify-end space-x-4">
                            <button type="button" id="cancel-checkout" class="bg-gray-300 hover:bg-gray-400 dark:bg-gray-600 dark:hover:bg-gray-700 px-6 py-2 rounded-md text-gray-800 dark:text-white">Cancel</button>
                            <button type="submit" class="btn-primary px-6 py-2 rounded-md">Place Order</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Order Confirmation Modal -->
        <div id="order-confirmation" class="fixed inset-0 z-50 hidden">
            <div class="absolute inset-0 bg-black bg-opacity-50"></div>
            <div class="relative w-full max-w-md mx-auto mt-20 bg-white dark:bg-gray-800 rounded-lg shadow-lg">
                <div class="p-6 text-center">
                    <div class="w-20 h-20 mx-auto flex items-center justify-center rounded-full bg-green-100 dark:bg-green-900 mb-4">
                        <i class="fas fa-check text-3xl text-green-500 dark:text-green-300"></i>
                    </div>
                    <h2 class="text-2xl font-bold mb-2">Order Placed!</h2>
                    <p class="mb-6">Your order has been placed successfully. You will receive a confirmation email shortly.</p>
                    <p class="mb-4 font-medium">Order #: <span id="order-number" class="font-bold"></span></p>
                    <button id="continue-order" class="btn-primary px-6 py-2 rounded-md">Continue Shopping</button>
                </div>
            </div>
        </div>

        <!-- Overlay for cart and modals -->
        <div id="overlay" class="fixed inset-0 bg-black bg-opacity-50 z-30 hidden"></div>

        <!-- Footer -->
        <footer class="bg-gray-800 text-white py-8">
            <div class="container mx-auto px-4">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                    <div>
                        <h3 class="text-lg font-bold mb-4">About Toot Express</h3>
                        <p class="text-gray-300">Toot Express is your one-stop destination for all your shopping needs. We provide quality products at affordable prices.</p>
                    </div>
                    <div>
                        <h3 class="text-lg font-bold mb-4">Quick Links</h3>
                        <ul class="space-y-2">
                            <li><a href="#" class="text-gray-300 hover:text-white transition duration-300">Home</a></li>
                            <li><a href="#" class="text-gray-300 hover:text-white transition duration-300">Shop</a></li>
                            <li><a href="#" class="text-gray-300 hover:text-white transition duration-300">About Us</a></li>
                            <li><a href="#" class="text-gray-300 hover:text-white transition duration-300">Contact</a></li>
                        </ul>
                    </div>
                    <div>
                        <h3 class="text-lg font-bold mb-4">Contact Us</h3>
                        <ul class="space-y-2 text-gray-300">
                            <li class="flex items-center"><i class="fas fa-map-marker-alt w-5 mr-2"></i> 123 Shopping St, E-Commerce City</li>
                            <li class="flex items-center"><i class="fas fa-phone w-5 mr-2"></i> +1 (555) 123-4567</li>
                            <li class="flex items-center"><i class="fas fa-envelope w-5 mr-2"></i> info@TootExpress.shop</li>
                        </ul>
                    </div>
                </div>
                <div class="border-t border-gray-700 mt-8 pt-6 text-center text-gray-400">
                    <p>&copy; 2023 Toot Express. All rights reserved.</p>
                </div>
            </div>
        </footer>
    </div>

    <script>
        // Store Data
        let categories = [
            { id: 1, name: 'Clothing', icon: 'fa-tshirt', products: 0 },
            { id: 2, name: 'Electronics', icon: 'fa-laptop', products: 0 },
            { id: 3, name: 'Furniture', icon: 'fa-couch', products: 0 },
            { id: 4, name: 'Kitchen', icon: 'fa-utensils', products: 0 },
            { id: 5, name: 'Footwear', icon: 'fa-shoe-prints', products: 0 }
        ];

        let products = [
            { id: 1, name: 'Cotton T-Shirt', category: 1, price: 19.99, stock: 50, image: 10, description: 'Comfortable cotton t-shirt with a classic fit.' },
            { id: 2, name: 'Slim Fit Jeans', category: 1, price: 49.99, stock: 30, image: 11, description: 'Stylish slim fit jeans made from high-quality denim.' },
            { id: 3, name: 'Wireless Headphones', category: 2, price: 99.99, stock: 20, image: 12, description: 'Premium wireless headphones with noise cancellation.' },
            { id: 4, name: 'Smartphone', category: 2, price: 699.99, stock: 15, image: 13, description: 'Latest smartphone with advanced camera and long battery life.' },
            { id: 5, name: 'Coffee Table', category: 3, price: 149.99, stock: 10, image: 14, description: 'Modern coffee table with wooden top and metal legs.' },
            { id: 6, name: 'Dining Chair Set', category: 3, price: 199.99, stock: 8, image: 15, description: 'Set of 4 comfortable dining chairs with elegant design.' },
            { id: 7, name: 'Chef Knife Set', category: 4, price: 129.99, stock: 25, image: 16, description: 'Professional chef knife set with 6 knives and block.' },
            { id: 8, name: 'Stand Mixer', category: 4, price: 249.99, stock: 12, image: 17, description: 'Powerful stand mixer for all your kitchen needs.' },
            { id: 9, name: 'Running Shoes', category: 5, price: 89.99, stock: 40, image: 18, description: 'Comfortable running shoes with cushioned soles.' },
            { id: 10, name: 'Leather Boots', category: 5, price: 129.99, stock: 18, image: 19, description: 'Stylish leather boots perfect for any occasion.' },
            { id: 11, name: 'Dress Shirt', category: 1, price: 45.99, stock: 35, image: 20, description: 'Classic dress shirt made from high-quality cotton.' },
            { id: 12, name: 'Laptop', category: 2, price: 899.99, stock: 10, image: 21, description: 'Powerful laptop with fast processor and SSD storage.' },
            { id: 13, name: 'Bookshelf', category: 3, price: 179.99, stock: 7, image: 22, description: 'Modern bookshelf with 5 shelves and sturdy construction.' },
            { id: 14, name: 'Blender', category: 4, price: 79.99, stock: 15, image: 23, description: 'High-speed blender for smoothies and food preparation.' },
            { id: 15, name: 'Casual Sneakers', category: 5, price: 59.99, stock: 50, image: 24, description: 'Comfortable casual sneakers for everyday wear.' }
        ];

        let orders = [
            { id: 1, customer: 'John Doe', date: '2023-05-15', items: 3, total: 269.97, status: 'Delivered' },
            { id: 2, customer: 'Jane Smith', date: '2023-05-20', items: 2, total: 149.98, status: 'Shipped' },
            { id: 3, customer: 'Michael Johnson', date: '2023-05-25', items: 5, total: 499.95, status: 'Processing' },
            { id: 4, customer: 'Emily Davis', date: '2023-05-28', items: 1, total: 89.99, status: 'Processing' },
            { id: 5, customer: 'Robert Wilson', date: '2023-05-30', items: 4, total: 359.96, status: 'Pending' }
        ];

        let cart = {
            items: [],
            subtotal: 0,
            shipping: 0,
            total: 0
        };

        // Update category products count
        function updateCategoryProductCount() {
            categories.forEach(category => {
                category.products = products.filter(product => product.category === category.id).length;
            });
        }
        updateCategoryProductCount();

        // DOM Elements
        const appElement = document.getElementById('app');
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');
        const navigationLinks = document.querySelectorAll('[data-page]');
        const pages = document.querySelectorAll('.page');
        const adminTabLinks = document.querySelectorAll('[data-admin-tab]');
        const adminTabs = document.querySelectorAll('.admin-tab');
        const cartButton = document.getElementById('cart-button');
        const cartSidebar = document.getElementById('cart-sidebar');
        const closeCart = document.getElementById('close-cart');
        const overlay = document.getElementById('overlay');
        const continueShopping = document.getElementById('continue-shopping');
        const checkoutBtn = document.getElementById('checkout-btn');
        const checkoutModal = document.getElementById('checkout-modal');
        const closeCheckout = document.getElementById('close-checkout');
        const cancelCheckout = document.getElementById('cancel-checkout');
        const checkoutForm = document.getElementById('checkout-form');
        const orderConfirmation = document.getElementById('order-confirmation');
        const continueOrder = document.getElementById('continue-order');
        const categoriesSection = document.querySelector('.container .grid');
        const categoryProducts = document.getElementById('category-products');
        const productsGrid = document.getElementById('products-grid');
        const categoryFilter = document.getElementById('category-filter');
        const searchProducts = document.getElementById('search-products');
        const sortProducts = document.getElementById('sort-products');
        const addProductBtn = document.getElementById('add-product-btn');
        const productForm = document.getElementById('product-form');
        const addEditProductForm = document.getElementById('add-edit-product-form');
        const cancelProduct = document.getElementById('cancel-product');
        const addCategoryBtn = document.getElementById('add-category-btn');
        const categoryForm = document.getElementById('category-form');
        const addEditCategoryForm = document.getElementById('add-edit-category-form');
        const cancelCategory = document.getElementById('cancel-category');
        const bannerSlides = document.querySelectorAll('.banner-slide');
        const bannerDots = document.querySelectorAll('.banner-dot');
        
        const toast = document.getElementById('toast');
        const toastMessage = document.getElementById('toast-message');

        // Mobile Menu Toggle
        mobileMenuButton.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
        });

        // Page Navigation
        navigationLinks.forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const page = link.getAttribute('data-page');
                pages.forEach(p => p.classList.add('hidden'));
                document.getElementById(`${page}-page`).classList.remove('hidden');
                
                if (window.innerWidth < 768) {
                    mobileMenu.classList.add('hidden');
                }
            });
        });

        // Admin Tab Navigation
        adminTabLinks.forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const tab = link.getAttribute('data-admin-tab');
                
                adminTabLinks.forEach(l => l.classList.remove('active'));
                adminTabs.forEach(t => t.classList.add('hidden'));
                
                link.classList.add('active');
                document.getElementById(`${tab}-tab`).classList.remove('hidden');
                
                // Handle quick actions
                const action = link.getAttribute('data-action');
                if (action === 'add-product') {
                    showProductForm();
                } else if (action === 'add-category') {
                    showCategoryForm();
                }
            });
        });

        // Cart Sidebar Toggle
        cartButton.addEventListener('click', () => {
            cartSidebar.classList.remove('translate-x-full');
            overlay.classList.remove('hidden');
            updateCartDisplay();
        });

        closeCart.addEventListener('click', () => {
            cartSidebar.classList.add('translate-x-full');
            overlay.classList.add('hidden');
        });

        overlay.addEventListener('click', () => {
            cartSidebar.classList.add('translate-x-full');
            checkoutModal.classList.add('hidden');
            orderConfirmation.classList.add('hidden');
            overlay.classList.add('hidden');
        });

        continueShopping.addEventListener('click', () => {
            cartSidebar.classList.add('translate-x-full');
            overlay.classList.add('hidden');
            navigateToPage('shop');
        });

        // Checkout Modal
        checkoutBtn.addEventListener('click', () => {
            cartSidebar.classList.add('translate-x-full');
            checkoutModal.classList.remove('hidden');
            
            // Update checkout summary
            document.getElementById('checkout-subtotal').textContent = formatPrice(cart.subtotal);
            document.getElementById('checkout-shipping').textContent = formatPrice(cart.shipping);
            document.getElementById('checkout-total').textContent = formatPrice(cart.total);
        });

        closeCheckout.addEventListener('click', () => {
            checkoutModal.classList.add('hidden');
            overlay.classList.add('hidden');
        });

        cancelCheckout.addEventListener('click', () => {
            checkoutModal.classList.add('hidden');
            overlay.classList.add('hidden');
        });

        // Order Confirmation
        checkoutForm.addEventListener('submit', (e) => {
            e.preventDefault();
            
            checkoutModal.classList.add('hidden');
            orderConfirmation.classList.remove('hidden');
            
            // Generate random order number
            const orderNumber = 'ORD-' + Math.floor(Math.random() * 1000000).toString().padStart(6, '0');
            document.getElementById('order-number').textContent = orderNumber;
            
            // Create a new order
            const newOrder = {
                id: orders.length + 1,
                customer: document.getElementById('first-name').value + ' ' + document.getElementById('last-name').value,
                date: new Date().toISOString().slice(0, 10),
                items: cart.items.reduce((sum, item) => sum + item.quantity, 0),
                total: cart.total,
                status: 'Pending'
            };
            
            orders.unshift(newOrder);
            
            // Reset cart
            cart.items = [];
            cart.subtotal = 0;
            cart.shipping = 0;
            cart.total = 0;
            updateCartDisplay();
            updateCartCount();
            
            // Reset form
            checkoutForm.reset();
        });

        continueOrder.addEventListener('click', () => {
            orderConfirmation.classList.add('hidden');
            overlay.classList.add('hidden');
            navigateToPage('home');
        });

        // Banner Carousel
        let currentBannerIndex = 0;
        
        function showBannerSlide(index) {
            bannerSlides.forEach((slide, i) => {
                slide.style.opacity = i === index ? '1' : '0';
                bannerDots[i].classList.toggle('active', i === index);
            });
        }
        
        function nextBannerSlide() {
            currentBannerIndex = (currentBannerIndex + 1) % bannerSlides.length;
            showBannerSlide(currentBannerIndex);
        }
        
        // Initialize banner
        showBannerSlide(0);
        
        // Set banner interval
        setInterval(nextBannerSlide, 5000);
        
        // Banner dots click handlers
        bannerDots.forEach((dot, index) => {
            dot.addEventListener('click', () => {
                currentBannerIndex = index;
                showBannerSlide(currentBannerIndex);
            });
        });

        // Show Toast Message
        function showToast(message) {
            toastMessage.textContent = message;
            toast.classList.add('show');
            
            setTimeout(() => {
                toast.classList.remove('show');
            }, 3000);
        }

        // Format Price
        function formatPrice(price) {
            return '$' + price.toFixed(2);
        }

        // Navigate to Page
        function navigateToPage(page) {
            pages.forEach(p => p.classList.add('hidden'));
            document.getElementById(`${page}-page`).classList.remove('hidden');
        }

        // Update Cart Count
        function updateCartCount() {
            const count = cart.items.reduce((sum, item) => sum + item.quantity, 0);
            document.getElementById('cart-count').textContent = count;
        }

        // Add to Cart Function
        function addToCart(productId) {
            const product = products.find(p => p.id === productId);
            if (!product) return;
            
            const existingItem = cart.items.find(item => item.id === productId);
            
            if (existingItem) {
                existingItem.quantity += 1;
            } else {
                cart.items.push({
                    id: product.id,
                    name: product.name,
                    price: product.price,
                    image: product.image,
                    quantity: 1
                });
            }
            
            // Update cart values
            calculateCart();
            
            // Update UI
            updateCartCount();
            animateCartButton();
            showToast(`${product.name} added to cart!`);
        }

        // Remove from Cart Function
        function removeFromCart(productId) {
            const index = cart.items.findIndex(item => item.id === productId);
            if (index !== -1) {
                cart.items.splice(index, 1);
                calculateCart();
                updateCartDisplay();
                updateCartCount();
            }
        }

        // Update Item Quantity
        function updateItemQuantity(productId, quantity) {
            const item = cart.items.find(item => item.id === productId);
            if (item) {
                item.quantity = quantity;
                if (item.quantity <= 0) {
                    removeFromCart(productId);
                } else {
                    calculateCart();
                    updateCartDisplay();
                    updateCartCount();
                }
            }
        }

        // Calculate Cart Totals
        function calculateCart() {
            cart.subtotal = cart.items.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            cart.shipping = cart.subtotal > 50 ? 0 : 10;
            cart.total = cart.subtotal + cart.shipping;
        }

        // Animate Cart Button
        function animateCartButton() {
            cartButton.classList.add('animate');
            setTimeout(() => {
                cartButton.classList.remove('animate');
            }, 500);
        }

        // Update Cart Display
        function updateCartDisplay() {
            const cartItems = document.getElementById('cart-items');
            const emptycart = document.getElementById('empty-cart');
            const cartSummary = document.getElementById('cart-summary');
            
            if (cart.items.length === 0) {
                emptycart.classList.remove('hidden');
                cartSummary.classList.add('hidden');
                cartItems.innerHTML = `
                    <div id="empty-cart" class="text-center py-8">
                        <i class="fas fa-shopping-cart text-4xl text-gray-300 dark:text-gray-600 mb-4"></i>
                        <p class="text-gray-500 dark:text-gray-400">Your cart is empty</p>
                        <button id="continue-shopping" class="mt-4 btn-primary px-4 py-2 rounded-md">Continue Shopping</button>
                    </div>
                `;
                
                document.getElementById('continue-shopping').addEventListener('click', () => {
                    cartSidebar.classList.add('translate-x-full');
                    overlay.classList.add('hidden');
                    navigateToPage('shop');
                });
                
                return;
            }
            
            emptycart.classList.add('hidden');
            cartSummary.classList.remove('hidden');
            
            // Update cart item display
            let cartHTML = '';
            
            cart.items.forEach(item => {
                cartHTML += `
                    <div class="flex border-b border-gray-200 dark:border-gray-700 py-4">
                        <div class="w-20 h-20 flex-shrink-0 bg-gray-100 dark:bg-gray-700 rounded overflow-hidden">
                            <img src="https://picsum.photos/id/${item.image}/200/200" alt="${item.name}" class="w-full h-full object-cover">
                        </div>
                        <div class="ml-4 flex-grow">
                            <div class="flex justify-between">
                                <h3 class="font-medium">${item.name}</h3>
                                <button class="text-gray-500 hover:text-red-500 dark:text-gray-400 dark:hover:text-red-400" onclick="removeFromCart(${item.id})">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                            <div class="text-gray-600 dark:text-gray-400 mt-1">${formatPrice(item.price)}</div>
                            <div class="flex items-center mt-2">
                                <button class="text-gray-500 dark:text-gray-400 hover:text-indigo-600 dark:hover:text-indigo-400" onclick="updateItemQuantity(${item.id}, ${item.quantity - 1})">
                                    <i class="fas fa-minus"></i>
                                </button>
                                <span class="mx-2 w-8 text-center">${item.quantity}</span>
                                <button class="text-gray-500 dark:text-gray-400 hover:text-indigo-600 dark:hover:text-indigo-400" onclick="updateItemQuantity(${item.id}, ${item.quantity + 1})">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                `;
            });
            
            cartItems.innerHTML = cartHTML;
            
            // Update cart summary
            document.getElementById('cart-subtotal').textContent = formatPrice(cart.subtotal);
            document.getElementById('cart-shipping').textContent = formatPrice(cart.shipping);
            document.getElementById('cart-total').textContent = formatPrice(cart.total);
        }

        // Render Categories
        function renderCategories() {
            const categoriesGrid = document.querySelector('.grid-cols-2');
            let categoriesHTML = '';
            
            categories.forEach(category => {
                categoriesHTML += `
                    <div class="card p-6 rounded-lg text-center">
                        <div class="w-16 h-16 bg-indigo-100 dark:bg-indigo-900 rounded-full flex items-center justify-center mx-auto mb-4">
                            <i class="fas ${category.icon} text-2xl text-indigo-600 dark:text-indigo-400"></i>
                        </div>
                        <h3 class="text-lg font-medium mb-2">${category.name}</h3>
                        <p class="text-gray-600 dark:text-gray-400 mb-4">${category.products} Products</p>
                        <button class="btn-primary px-4 py-2 rounded-md w-full" onclick="filterProductsByCategory(${category.id})">View All</button>
                    </div>
                `;
            });
            
            categoriesGrid.innerHTML = categoriesHTML;
        }

        // Render Category Product Sliders
        function renderCategoryProducts() {
            let categoryProductsHTML = '';
            
            categories.forEach(category => {
                const categoryProducts = products.filter(product => product.category === category.id);
                
                if (categoryProducts.length === 0) return;
                
                let productCardsHTML = '';
                
                categoryProducts.forEach(product => {
                    productCardsHTML += `
                        <div class="carousel-item w-64">
                            <div class="card product-card h-full flex flex-col">
                                <div class="h-48 overflow-hidden">
                                    <img src="https://picsum.photos/id/${product.image}/400/300" alt="${product.name}" class="w-full h-full object-cover">
                                </div>
                                <div class="p-4 flex-grow flex flex-col">
                                    <h3 class="font-medium text-lg mb-2">${product.name}</h3>
                                    <p class="text-gray-600 dark:text-gray-400 mb-4 line-clamp-2 flex-grow">${product.description}</p>
                                    <div class="flex justify-between items-center">
                                        <span class="text-lg font-bold">${formatPrice(product.price)}</span>
                                        <button class="btn-primary p-2 rounded-full" onclick="addToCart(${product.id})">
                                            <i class="fas fa-cart-plus"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
                });
                
                categoryProductsHTML += `
                    <div class="container mx-auto px-4 mb-12">
                        <div class="flex justify-between items-center mb-6">
                            <h2 class="text-2xl font-bold">${category.name}</h2>
                            <a href="#" class="text-indigo-600 dark:text-indigo-400 hover:underline" onclick="filterProductsByCategory(${category.id})">View All</a>
                        </div>
                        <div class="category-carousel carousel">
                            <div class="carousel-container flex overflow-x-auto pb-4 hide-scrollbar">
                                ${productCardsHTML}
                            </div>
                        </div>
                    </div>
                `;
            });
            
            categoryProducts.innerHTML = categoryProductsHTML;
        }

        // Filter Products by Category
        function filterProductsByCategory(categoryId) {
            navigateToPage('shop');
            
            if (categoryId) {
                categoryFilter.value = categoryId;
            } else {
                categoryFilter.value = '';
            }
            
            filterAndRenderProducts();
        }

        // Render Shop Products
        function renderShopProducts(productsToRender = products) {
            let productsHTML = '';
            
            if (productsToRender.length === 0) {
                productsHTML = `
                    <div class="col-span-full text-center py-12">
                        <i class="fas fa-search text-4xl text-gray-300 dark:text-gray-600 mb-4"></i>
                        <p class="text-gray-500 dark:text-gray-400">No products found. Try different filters.</p>
                    </div>
                `;
            } else {
                productsToRender.forEach(product => {
                    productsHTML += `
                        <div class="card product-card flex flex-col h-full">
                            <div class="h-48 overflow-hidden">
                                <img src="https://picsum.photos/id/${product.image}/400/300" alt="${product.name}" class="w-full h-full object-cover">
                            </div>
                            <div class="p-4 flex-grow flex flex-col">
                                <h3 class="font-medium text-lg mb-2">${product.name}</h3>
                                <p class="text-gray-600 dark:text-gray-400 mb-4 line-clamp-2 flex-grow">${product.description}</p>
                                <div class="flex justify-between items-center">
                                    <span class="text-lg font-bold">${formatPrice(product.price)}</span>
                                    <button class="btn-primary p-2 rounded-full" onclick="addToCart(${product.id})">
                                        <i class="fas fa-cart-plus"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    `;
                });
            }
            
            productsGrid.innerHTML = productsHTML;
        }

        // Filter and Sort Products
        function filterAndRenderProducts() {
            const categoryValue = categoryFilter.value;
            const searchValue = searchProducts.value.toLowerCase();
            const sortValue = sortProducts.value;
            
            let filteredProducts = [...products];
            
            // Apply category filter
            if (categoryValue) {
                filteredProducts = filteredProducts.filter(product => product.category === parseInt(categoryValue));
            }
            
            // Apply search filter
            if (searchValue) {
                filteredProducts = filteredProducts.filter(product => 
                    product.name.toLowerCase().includes(searchValue) || 
                    product.description.toLowerCase().includes(searchValue)
                );
            }
            
            // Apply sorting
            switch (sortValue) {
                case 'price-asc':
                    filteredProducts.sort((a, b) => a.price - b.price);
                    break;
                case 'price-desc':
                    filteredProducts.sort((a, b) => b.price - a.price);
                    break;
                case 'name-asc':
                    filteredProducts.sort((a, b) => a.name.localeCompare(b.name));
                    break;
                case 'name-desc':
                    filteredProducts.sort((a, b) => b.name.localeCompare(a.name));
                    break;
                default:
                    // Default sorting by ID
                    filteredProducts.sort((a, b) => a.id - b.id);
            }
            
            renderShopProducts(filteredProducts);
        }

        // Populate Category Filter
        function populateCategoryFilter() {
            let optionsHTML = '<option value="">All Categories</option>';
            
            categories.forEach(category => {
                optionsHTML += `<option value="${category.id}">${category.name}</option>`;
            });
            
            categoryFilter.innerHTML = optionsHTML;
        }

        // Product Form
        function showProductForm(productId = null) {
            const formTitle = document.getElementById('product-form-title');
            const productCategorySelect = document.getElementById('product-category');
            
            // Show product tab
            adminTabLinks.forEach(l => l.classList.remove('active'));
            adminTabs.forEach(t => t.classList.add('hidden'));
            
            document.querySelector('[data-admin-tab="products"]').classList.add('active');
            document.getElementById('products-tab').classList.remove('hidden');
            
            // Populate category dropdown
            let categoryOptions = '';
            categories.forEach(category => {
                categoryOptions += `<option value="${category.id}">${category.name}</option>`;
            });
            productCategorySelect.innerHTML = categoryOptions;
            
            // Reset form
            addEditProductForm.reset();
            
            if (productId) {
                // Edit mode
                const product = products.find(p => p.id === productId);
                if (!product) return;
                
                formTitle.textContent = 'Edit Product';
                document.getElementById('product-id').value = product.id;
                document.getElementById('product-name').value = product.name;
                document.getElementById('product-category').value = product.category;
                document.getElementById('product-price').value = product.price;
                document.getElementById('product-stock').value = product.stock;
                document.getElementById('product-image').value = product.image;
                document.getElementById('product-description').value = product.description;
            } else {
                // Add mode
                formTitle.textContent = 'Add New Product';
                document.getElementById('product-id').value = '';
            }
            
            productForm.classList.remove('hidden');
        }

        // Cancel Product Form
        cancelProduct.addEventListener('click', () => {
            productForm.classList.add('hidden');
        });

        // Add/Edit Product Submit
        addEditProductForm.addEventListener('submit', (e) => {
            e.preventDefault();
            
            const productId = document.getElementById('product-id').value;
            const productData = {
                name: document.getElementById('product-name').value,
                category: parseInt(document.getElementById('product-category').value),
                price: parseFloat(document.getElementById('product-price').value),
                stock: parseInt(document.getElementById('product-stock').value),
                image: parseInt(document.getElementById('product-image').value),
                description: document.getElementById('product-description').value
            };
            
            if (productId) {
                // Update existing product
                const index = products.findIndex(p => p.id === parseInt(productId));
                if (index !== -1) {
                    products[index] = { ...products[index], ...productData };
                }
            } else {
                // Add new product
                const newId = products.length > 0 ? Math.max(...products.map(p => p.id)) + 1 : 1;
                products.push({ id: newId, ...productData });
            }
            
            // Update category products count
            updateCategoryProductCount();
            
            // Update UI
            renderProductsTable();
            renderCategories();
            renderCategoryProducts();
            updateDashboardStats();
            
            // Hide form
            productForm.classList.add('hidden');
            
            // Show success message
            showToast(productId ? 'Product updated successfully!' : 'Product added successfully!');
        });

        // Category Form
        function showCategoryForm(categoryId = null) {
            const formTitle = document.getElementById('category-form-title');
            
            // Show category tab
            adminTabLinks.forEach(l => l.classList.remove('active'));
            adminTabs.forEach(t => t.classList.add('hidden'));
            
            document.querySelector('[data-admin-tab="categories"]').classList.add('active');
            document.getElementById('categories-tab').classList.remove('hidden');
            
            // Reset form
            addEditCategoryForm.reset();
            
            if (categoryId) {
                // Edit mode
                const category = categories.find(c => c.id === categoryId);
                if (!category) return;
                
                formTitle.textContent = 'Edit Category';
                document.getElementById('category-id').value = category.id;
                document.getElementById('category-name').value = category.name;
                document.getElementById('category-icon').value = category.icon;
            } else {
                // Add mode
                formTitle.textContent = 'Add New Category';
                document.getElementById('category-id').value = '';
            }
            
            categoryForm.classList.remove('hidden');
        }

        // Cancel Category Form
        cancelCategory.addEventListener('click', () => {
            categoryForm.classList.add('hidden');
        });

        // Add/Edit Category Submit
        addEditCategoryForm.addEventListener('submit', (e) => {
            e.preventDefault();
            
            const categoryId = document.getElementById('category-id').value;
            const categoryData = {
                name: document.getElementById('category-name').value,
                icon: document.getElementById('category-icon').value,
                products: 0
            };
            
            if (categoryId) {
                // Update existing category
                const index = categories.findIndex(c => c.id === parseInt(categoryId));
                if (index !== -1) {
                    categories[index] = { 
                        ...categories[index], 
                        name: categoryData.name, 
                        icon: categoryData.icon
                    };
                }
            } else {
                // Add new category
                const newId = categories.length > 0 ? Math.max(...categories.map(c => c.id)) + 1 : 1;
                categories.push({ id: newId, ...categoryData });
            }
            
            // Update category products count
            updateCategoryProductCount();
            
            // Update UI
            renderCategoriesTable();
            renderCategories();
            populateCategoryFilter();
            updateDashboardStats();
            
            // Hide form
            categoryForm.classList.add('hidden');
            
            // Show success message
            showToast(categoryId ? 'Category updated successfully!' : 'Category added successfully!');
        });

        // Delete Product
        function deleteProduct(productId) {
            if (confirm('Are you sure you want to delete this product?')) {
                const index = products.findIndex(p => p.id === productId);
                if (index !== -1) {
                    products.splice(index, 1);
                    
                    // Update category products count
                    updateCategoryProductCount();
                    
                    // Update UI
                    renderProductsTable();
                    renderCategories();
                    renderCategoryProducts();
                    updateDashboardStats();
                    
                    // Show success message
                    showToast('Product deleted successfully!');
                }
            }
        }

        // Delete Category
        function deleteCategory(categoryId) {
            const category = categories.find(c => c.id === categoryId);
            if (!category) return;
            
            const productsInCategory = products.filter(p => p.category === categoryId).length;
            
            if (productsInCategory > 0) {
                alert(`Cannot delete category "${category.name}" because it contains ${productsInCategory} products.`);
                return;
            }
            
            if (confirm(`Are you sure you want to delete the category "${category.name}"?`)) {
                const index = categories.findIndex(c => c.id === categoryId);
                if (index !== -1) {
                    categories.splice(index, 1);
                    
                    // Update UI
                    renderCategoriesTable();
                    renderCategories();
                    populateCategoryFilter();
                    updateDashboardStats();
                    
                    // Show success message
                    showToast('Category deleted successfully!');
                }
            }
        }

        // Render Products Table
        function renderProductsTable() {
            const productsTable = document.getElementById('products-table');
            let rowsHTML = '';
            
            products.forEach(product => {
                const category = categories.find(c => c.id === product.category);
                
                rowsHTML += `
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap">${product.id}</td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="w-12 h-12 rounded overflow-hidden">
                                <img src="https://picsum.photos/id/${product.image}/100/100" alt="${product.name}" class="w-full h-full object-cover">
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">${product.name}</td>
                        <td class="px-6 py-4 whitespace-nowrap">${category ? category.name : 'Unknown'}</td>
                        <td class="px-6 py-4 whitespace-nowrap">${formatPrice(product.price)}</td>
                        <td class="px-6 py-4 whitespace-nowrap">${product.stock}</td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex space-x-2">
                                <button class="text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-300" onclick="showProductForm(${product.id})">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300" onclick="deleteProduct(${product.id})">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                `;
            });
            
            productsTable.innerHTML = rowsHTML;
        }

        // Render Categories Table
        function renderCategoriesTable() {
            const categoriesTable = document.getElementById('categories-table');
            let rowsHTML = '';
            
            categories.forEach(category => {
                rowsHTML += `
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap">${category.id}</td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="w-10 h-10 rounded-full bg-indigo-100 dark:bg-indigo-900 flex items-center justify-center">
                                <i class="fas ${category.icon} text-indigo-600 dark:text-indigo-400"></i>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">${category.name}</td>
                        <td class="px-6 py-4 whitespace-nowrap">${category.products}</td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex space-x-2">
                                <button class="text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-300" onclick="showCategoryForm(${category.id})">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300" onclick="deleteCategory(${category.id})">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                `;
            });
            
            categoriesTable.innerHTML = rowsHTML;
        }

        // Render Orders Table
        function renderOrdersTable() {
            const ordersTable = document.getElementById('orders-table');
            let rowsHTML = '';
            
            orders.forEach(order => {
                const statusClass = 
                    order.status === 'Delivered' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300' : 
                    order.status === 'Shipped' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300' : 
                    order.status === 'Processing' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300' : 
                    'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300';
                
                rowsHTML += `
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap">#${order.id}</td>
                        <td class="px-6 py-4 whitespace-nowrap">${order.customer}</td>
                        <td class="px-6 py-4 whitespace-nowrap">${order.date}</td>
                        <td class="px-6 py-4 whitespace-nowrap">${order.items}</td>
                        <td class="px-6 py-4 whitespace-nowrap">${formatPrice(order.total)}</td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${statusClass}">
                                ${order.status}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <button class="text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-300">
                                <i class="fas fa-eye"></i>
                            </button>
                        </td>
                    </tr>
                `;
            });
            
            ordersTable.innerHTML = rowsHTML;
        }

        // Render Recent Orders
        function renderRecentOrders() {
            const recentOrders = document.getElementById('recent-orders');
            let rowsHTML = '';
            
            // Get the 5 most recent orders
            const latestOrders = [...orders].slice(0, 5);
            
            latestOrders.forEach(order => {
                const statusClass = 
                    order.status === 'Delivered' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300' : 
                    order.status === 'Shipped' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300' : 
                    order.status === 'Processing' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300' : 
                    'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300';
                
                rowsHTML += `
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap">#${order.id}</td>
                        <td class="px-6 py-4 whitespace-nowrap">${order.customer}</td>
                        <td class="px-6 py-4 whitespace-nowrap">${order.date}</td>
                        <td class="px-6 py-4 whitespace-nowrap">${formatPrice(order.total)}</td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${statusClass}">
                                ${order.status}
                            </span>
                        </td>
                    </tr>
                `;
            });
            
            recentOrders.innerHTML = rowsHTML;
        }

        // Update Dashboard Stats
        function updateDashboardStats() {
            document.getElementById('total-products').textContent = products.length;
            document.getElementById('total-categories').textContent = categories.length;
            document.getElementById('total-orders').textContent = orders.length;
        }

        // Event Listeners
        addProductBtn.addEventListener('click', () => showProductForm());
        addCategoryBtn.addEventListener('click', () => showCategoryForm());

        categoryFilter.addEventListener('change', filterAndRenderProducts);
        searchProducts.addEventListener('input', filterAndRenderProducts);
        sortProducts.addEventListener('change', filterAndRenderProducts);

        // Initialize 
        function initApp() {
            renderCategories();
            renderCategoryProducts();
            populateCategoryFilter();
            renderShopProducts();
            renderProductsTable();
            renderCategoriesTable();
            renderOrdersTable();
            renderRecentOrders();
            updateDashboardStats();
            updateCartCount();
        }

        // Make functions available globally
        window.addToCart = addToCart;
        window.removeFromCart = removeFromCart;
        window.updateItemQuantity = updateItemQuantity;
        window.filterProductsByCategory = filterProductsByCategory;
        window.showProductForm = showProductForm;
        window.deleteProduct = deleteProduct;
        window.showCategoryForm = showCategoryForm;
        window.deleteCategory = deleteCategory;

        // Start the app
        initApp();
    </script>
</body>
</html>